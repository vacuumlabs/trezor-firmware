# Automatically generated by pb2py
# fmt: off
# isort:skip_file
from .. import protobuf as p

from .CardanoBlockchainPointerType import CardanoBlockchainPointerType
from .CardanoScript import CardanoScript

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
        EnumTypeCardanoAddressType = Literal[0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15]
    except ImportError:
        pass


class CardanoAddressParametersType(p.MessageType):

    def __init__(
        self,
        *,
        address_type: EnumTypeCardanoAddressType,
        address_n: Optional[List[int]] = None,
        address_n_staking: Optional[List[int]] = None,
        staking_key_hash: Optional[bytes] = None,
        certificate_pointer: Optional[CardanoBlockchainPointerType] = None,
        script_payment: Optional[CardanoScript] = None,
        script_payment_hash: Optional[bytes] = None,
        script_staking: Optional[CardanoScript] = None,
        script_staking_hash: Optional[bytes] = None,
    ) -> None:
        self.address_n = address_n if address_n is not None else []
        self.address_n_staking = address_n_staking if address_n_staking is not None else []
        self.address_type = address_type
        self.staking_key_hash = staking_key_hash
        self.certificate_pointer = certificate_pointer
        self.script_payment = script_payment
        self.script_payment_hash = script_payment_hash
        self.script_staking = script_staking
        self.script_staking_hash = script_staking_hash

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('address_type', p.EnumType("CardanoAddressType", (0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15,)), p.FLAG_REQUIRED),
            2: ('address_n', p.UVarintType, p.FLAG_REPEATED),
            3: ('address_n_staking', p.UVarintType, p.FLAG_REPEATED),
            4: ('staking_key_hash', p.BytesType, None),
            5: ('certificate_pointer', CardanoBlockchainPointerType, None),
            6: ('script_payment', CardanoScript, None),
            7: ('script_payment_hash', p.BytesType, None),
            8: ('script_staking', CardanoScript, None),
            9: ('script_staking_hash', p.BytesType, None),
        }
